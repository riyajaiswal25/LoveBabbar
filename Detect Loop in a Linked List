Using HashMap:

class Solution {
    //Function to check if the linked list has a loop.
    public static boolean detectLoop(Node head){
        // Add code here
        if(head==null)
        return false;
        HashMap<Node,Integer> map=new HashMap<>();
        while(head!=null)
        {
            if(!map.containsKey(head))
            {
                map.put(head,1);
                head=head.next;
            }
            else
            return true;
        }
        return false;
    }
    
    Using O(1) space complexity:
    
    class Solution {
    //Function to check if the linked list has a loop.
    public static boolean detectLoop(Node head){
        // Add code here
        
        Node slow=head;
        Node fast=head;
        while(fast!=null && fast.next!=null)
        {
            slow=slow.next;
            fast=fast.next.next;
            if(slow==fast)
            return true;
        }
        return false;
        
    }
}
